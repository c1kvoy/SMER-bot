from aiogram import Router
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from datetime import datetime

from sqlalchemy import select
from sqlalchemy import and_



from src.database import session, Diary, Users

router = Router()


class AddDiaryState(StatesGroup):
    time_period = State()
    situation = State()
    thought = State()
    emotion = State()
    reaction = State()


@router.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫ –°–ú–≠–†!\n\n"
        "–í—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Ç—Ä–æ–º, –¥–Ω–µ–º –∏ –≤–µ—á–µ—Ä–æ–º —Å –ø–æ–º–æ—â—å—é —Å–º–∞–π–ª–∏–∫–æ–≤: üò≠üôÅüòêüôÇü§©.\n"
        "–ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞."
    )


@router.message(Command("add"))
async def start_add_entry(message: Message, state: FSMContext):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–£—Ç—Ä–æ")],
            [KeyboardButton(text="–î–µ–Ω—å")],
            [KeyboardButton(text="–í–µ—á–µ—Ä")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–Ω—è –¥–ª—è –∑–∞–ø–∏—Å–∏ (—É—Ç—Ä–æ, –¥–µ–Ω—å, –≤–µ—á–µ—Ä):", reply_markup=keyboard)
    await state.set_state(AddDiaryState.time_period)


@router.message(AddDiaryState.time_period)
async def chose_period(message: Message, state: FSMContext):
    if message.text not in ["–£—Ç—Ä–æ", "–î–µ–Ω—å", "–í–µ—á–µ—Ä"]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π: –£—Ç—Ä–æ, –î–µ–Ω—å –∏–ª–∏ –í–µ—á–µ—Ä")
        return
    await state.update_data(time_period=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–∏–∑–æ—à–ª–∞", reply_markup=ReplyKeyboardRemove())
    await state.set_state(AddDiaryState.situation)


@router.message(AddDiaryState.situation)
async def chose_situation(message: Message, state: FSMContext):
    await state.update_data(situation=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ –æ —á–µ–º –≤—ã –¥—É–º–∞–ª–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç")
    await state.set_state(AddDiaryState.thought)


@router.message(AddDiaryState.thought)
async def chose_thought(message: Message, state: FSMContext):
    await state.update_data(thought=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ —ç–º–æ—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –æ—â—É—â–∞–ª–∏ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç")
    await state.set_state(AddDiaryState.emotion)


@router.message(AddDiaryState.emotion)
async def chose_emotion(message: Message, state: FSMContext):
    await state.update_data(emotion=message.text)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="1.üò≠")],
            [KeyboardButton(text="2.üôÅ")],
            [KeyboardButton(text="3.üòê")],
            [KeyboardButton(text="4.üôÇ")],
            [KeyboardButton(text="5.ü§©")]
        ],
        resize_keyboard=True
    )
    await message.answer("–û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Ä–µ–∞–∫—Ü–∏—é –æ—Ç 1 –¥–æ 5 —Å–º–∞–π–ª–∏–∫–æ–º", reply_markup=keyboard)
    await state.set_state(AddDiaryState.reaction)


@router.message(AddDiaryState.reaction)
async def chose_reaction(message: Message, state: FSMContext):
    hm = {"1.üò≠": 1, "2.üôÅ": 2, "3.üòê": 3 ,"4.üôÇ": 4, "5.ü§©":5}
    if message.text not in hm.keys():
        await message("–í—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–º–∞–π–ª–∏–∫–æ–≤")
        return
    await state.update_data(reaction=hm[message.text])
    data = await state.get_data()
    async with session() as db:
        query = select(Users).where(and_(Users.user_id == message.from_user.id, Users.is_logged_in == True))
        result = await db.execute(query)
        user = result.scalars().first()

    diary_entry = Diary(
        login=user.login,
        user_id=message.from_user.id,
        time_period=data["time_period"],
        situation=data["situation"],
        reaction=data["reaction"],
        thoughts=data["thought"],
        emotions=data["emotion"],
        timestamp=datetime.now(),
    )
    await state.clear()
    async with session() as db:
        db.add(diary_entry)
        await db.commit()
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å, –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à –¥–Ω–µ–≤–Ω–∏–∫.",
        reply_markup=ReplyKeyboardRemove()
    )
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="/add")],
            [KeyboardButton(text="/average")],
            [KeyboardButton(text="/export")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
        reply_markup=keyboard
    )


